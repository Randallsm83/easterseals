doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Session Data
    script(src="https://cdn.jsdelivr.net/npm/chart.js")
    script(src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns")
    link(rel="stylesheet", type="text/css", href="/stylesheets/style.css")
    script.
      const data = !{JSON.stringify(data)}
      document.addEventListener('DOMContentLoaded', function() {
        document.querySelector('select[name="sessionId"]').addEventListener('change', (e) => {
          fetchDataForSession(event.target.value)
        })

        let clickDistributionChart = null

        function updateCharts(sessionData) {
          const sessionStartTime = new Date(sessionData.startTime).getTime()
          const sessionEndTime = new Date(sessionData.endTime).getTime()

          // Click Distribution
          const clicksOverTime = {left: [], middle: [], right: [], total: []}
          let totalClicks = 0

          sessionData.allClicks.forEach(click => {
            const clickTime = new Date(click.timestamp).getTime()
            const elapsedTime = (clickTime - sessionStartTime) / 1000; // Convert to seconds

            if (!clicksOverTime[click.value]) {
              clicksOverTime[click.value] = [];
            }

            let lastCount = clicksOverTime[click.value].length > 0 ? clicksOverTime[click.value][clicksOverTime[click.value].length - 1].y : 0;
            clicksOverTime[click.value].push({x: elapsedTime, y: lastCount + 1});

            totalClicks++;
            clicksOverTime.total.push({x: elapsedTime, y: totalClicks});
          })

          if (clickDistributionChart) {
            clickDistributionChart.destroy()
          }

          const ctx = document.getElementById('clickDistributionChart').getContext('2d')
          clickDistributionChart = new Chart(ctx, {
            type: 'line',
            data: {
              datasets: [
                {
                  label: 'Left Clicks',
                  data: clicksOverTime.left,
                  borderColor: 'red',
                  borderWidth: 1,
                  fill: false,
                },
                {
                  label: 'Middle Clicks',
                  data: clicksOverTime.middle,
                  borderColor: 'blue',
                  borderWidth: 1,
                  fill: false,
                },
                {
                  label: 'Right Clicks',
                  data: clicksOverTime.right,
                  borderColor: 'green',
                  borderWidth: 1,
                  fill: false,
                },
                {
                  label: 'Total Clicks',
                  data: clicksOverTime.total,
                  borderColor: 'black',
                  borderWidth: 1,
                  fill: false,
                  showLine: false,
                }
              ]
            },
            options: {
              scales: {
                x: {
                  type: 'linear',
                  position: 'bottom',
                  min: 0,
                  max: Math.floor((sessionEndTime - sessionStartTime) / 1000),
                  title: {
                    display: true,
                    text: 'Time Elapsed (seconds)'
                  }
                },
                y: {
                  beginAtZero: true
                }
              }
            }
          })
        }

        function fetchDataForSession(sessionId) {
          if (!sessionId) return

          fetch(`/graphs/${sessionId}`)
          .then(response => response.json())
          .then(sessionData => {
            console.log(sessionData)
            updateCharts(sessionData)
          })
          .catch(error => console.error('Error fetching session data:', error))
        }
      })
  body
    .main-container
      h1 Session Data
      .select-container
        select(name="sessionId")
          option(value="") Select a Session
          each sessionId in data
            option(value=sessionId.sessionId)= sessionId.sessionId
      .graph-container
        h2 Click Distribution
        canvas#clickDistributionChart(width="800", height="600")
